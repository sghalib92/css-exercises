@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

body {
  height: 100vh;
  margin: 0;
  overflow: hidden;
  font-family: Roboto, sans-serif;
}

img {
  width: 600px;
}

button {
  font-family: Roboto, sans-serif;
  border: none;
  border-radius: 8px;
  background: #eee;
}

input {
  border: 1px solid #ddd;
  border-radius: 16px;
  padding: 8px 24px;
  width: 400px;
  margin-bottom: 16px;
}

/* My solution */

/* body {
  display: flex;
  flex-direction: column;
}

.header, .footer {
  display: flex;
  justify-content: space-between;
  padding: 10px;
}

.left-links, .right-links {
  display: flex;
  gap: 10px;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex: 1;
}

ul, li a {
  padding: 0;
  margin: 0;
  list-style-type: none;
  text-decoration: none;
  color: black;
}

button {
  padding: 8px 24px;
}

.footer {
  background-color: rgb(236, 235, 235);
} */

body {
  display: flex;
  flex-direction: column;
}

ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  display: flex;
  gap: 15px;
}

button {
  padding: 8px 24px;
}

li a {
  text-decoration: none;
  color: rgb(71, 70, 70);
}

.header, .footer {
display: flex;
justify-content: space-between;
padding: 14px;
}

/* flex-basis refers to the height for columns
and it's default value is auto. A flex grow of 1
allows our content container to grow vertically to fill
up the space inside the container, which is 100vh tall. A 
margin of auto will also center the item. Setting a
justify-content: space-between on the body will also work
to vertically separate our header, content and footer. */

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex: 1;
}

.footer {
  background-color: #eeeeee;
}